generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String?  @unique
  password     String?
  role         String
  otp          String?
  otpExpiresAt DateTime?
  createdAt    DateTime @default(now())
}

// NEW: Employee model
model Employee {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  employeeId     String           @unique
  department     String
  designation    String
  type           String
  status         String
  avatar         String?
  createdAt      DateTime         @default(now())

  personalInfo   PersonalInfo?
  professional   ProfessionalInfo?
  documents      DocumentSet?
  accounts       AccountLinks?
}

model PersonalInfo {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  employee     Employee @relation(fields: [employeeId], references: [id])
  employeeId   String   @db.ObjectId

  email         String
  phone         String
  dob           String
  maritalStatus String
  gender        String
  nationality   String
  address       String
  city          String
  state         String
  zipCode       String
}

model ProfessionalInfo {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  employee       Employee @relation(fields: [employeeId], references: [id])
  employeeId     String   @db.ObjectId

  username       String
  joiningDate    String
  workingDays    String
  officeLocation String
}

model DocumentSet {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  employee           Employee @relation(fields: [employeeId], references: [id])
  employeeId         String   @db.ObjectId

  appointmentLetter  String?
  salarySlip         String?
  relievingLetter    String?
  experienceLetter   String?
}

model AccountLinks {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String   @db.ObjectId

  email     String
  slackId   String
  skypeId   String
  githubId  String
}
